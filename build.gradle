buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
    }
}


// Shared config
subprojects {
    /// Plugins
    // Compilation
    apply plugin: "java"
    apply plugin: "kotlin"

    // Static analysis
    apply plugin: "com.diffplug.gradle.spotless"
    apply plugin: "jacoco"


    /// Dependencies
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlinVersion
        compile group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: kotlinVersion

        testCompile group: "org.assertj", name: "assertj-core", version: assertjVersion
        testCompile group: "org.jetbrains.spek", name: "spek-api", version: spekVersion
        testRuntime group: "org.jetbrains.spek", name: "spek-junit-platform-engine", version: spekVersion
        testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitVersion
    }


    /// Configuration
    // Kotlin
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    // JUnit / Spek
    test {
        useJUnitPlatform() {
            includeEngines "spek"
        }
    }

    // Spotless
    spotless {
        kotlin {
            ktlint()
        }
    }

    // Jacoco
    test {
        jacoco {
            append = true
            destinationFile = file("$rootProject.buildDir/jacoco/test.exec")
        }
    }

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)

        reports {
            csv.enabled = false
            html.enabled = true
            xml.enabled = true
        }
    }
}


// Global config
apply from: "gradle/detekt.gradle"

// Jacoco report combining all reports
task jacocoRootReport(type: JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }

    doFirst {
        executionData = files(executionData.findAll {
            it.exists()
        })
    }

    onlyIf = { true }
}
